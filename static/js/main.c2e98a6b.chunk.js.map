{"version":3,"sources":["images/logo.svg","components/Header.js","images/edit-pencil.svg","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/Api.js","utils/Auth.js","utils/utils.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/Register.js","components/Login.js","components/Auth.js","components/ProtectedRoute.js","components/InfoTooltip.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","removeJWT","localStorage","removeItem","toggleLoggedIn","setEmail","window","location","reload","handleHamburgerClick","toggleHamburgerState","hamburger","className","src","logo","alt","link","to","name","email","onClick","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","cardOwnerId","_id","isLiked","cardLikes","some","i","replace","handleDeleteClick","cardId","handleCardClick","cardLink","cardName","style","backgroundImage","onCardLike","length","Main","avatar","editPencil","handleEditAvatarClick","handleEditProfileClick","about","handleAddCardClick","cards","map","card","id","ownerId","likes","handleCardLike","Footer","ImagePopup","isOpen","onClose","Api","endpoint","this","_apiEndpoint","url","_auth","headers","res","ok","json","Promise","reject","status","auth","fetch","then","_checkResponse","data","method","body","JSON","stringify","cardID","likeStatus","authApi","_headers","password","jwt","PopupWithForm","onSubmit","type","title","children","EditProfilePopup","nameRef","createRef","aboutRef","e","preventDefault","current","value","description","onUpdateUser","ref","placeholder","defaultValue","minLength","maxLength","required","isSaving","EditAvatarPopup","linkRef","onUpdateAvatar","AddPlacePopup","titleRef","onAddPlace","ConfirmDeletePopup","onCardDelete","confirmDeleteId","Register","emailRef","passwordRef","registerRequest","Login","loginRequest","Auth","console","log","buttonDescription","linkName","ProtectedRoute","Component","component","isLoggedIn","InfoTooltip","useState","message","setMessage","useEffect","registrationSuccess","App","setCurrentInfo","editAvatarIsOpen","toggleEditAvatar","editProfileIsOpen","toggleEditProfile","addCardIsOpen","toggleAddCard","confirmDeleteIsOpen","toggleConfirmDelete","infoTooltipIsOpen","toggleInfoTooltip","setConfirmDeleteId","selectedCard","setSelectedCard","toggleSaveText","setCards","setRegistrationSuccess","token","setToken","getItem","api","authorization","changeProfileInfo","setCurrentUserInfo","catch","err","getUserInfo","closeAllPopups","target","currentTarget","checkToken","Error","currentInfo","info","getCardList","owner","myId","Provider","exact","path","changeLikeCardStatus","newCard","c","newCards","signIn","setItem","signUp","from","updateAvatar","addCard","deleteCard","filteredCards","filter","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c2e98a6b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c7581985.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header(props){\r\n\r\n    function removeJWT() {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('email');\r\n        props.toggleLoggedIn(false);\r\n        props.setEmail(\"\");\r\n        window.location.reload();\r\n        return\r\n    }\r\n\r\n    function handleHamburgerClick() {\r\n        props.toggleHamburgerState(!props.hamburger);\r\n    }\r\n\r\n    function loginOrRegister() { \r\n        if (props.link) {\r\n            return <Link className=\"header__link\" to={props.link}>{props.name}</Link> \r\n        } else if (props.email) {\r\n            return (\r\n                <>\r\n                    <p className={`header__email ${props.hamburger ? \"header__email_hamburger_active\" : \"\"}`}>{props.email}</p>\r\n                    <button onClick={removeJWT} className={`header__logout ${props.hamburger ? \"header__logout_hamburger_active\" : \"\"}`}>Log Out</button>\r\n                    <button onClick={handleHamburgerClick} className={`header__hamburger ${props.hamburger ? \"header__hamburger_active\" : \"\"}`}></button>\r\n                </>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <header className={`header width ${props.hamburger ? \"header_hamburger_active\" : \"\"}`}>\r\n            <img className=\"logo\" src={logo} alt=\"Around the US Logo\"/>\r\n            {loginOrRegister()}\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/edit-pencil.ae1a976d.svg\";","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React, {useContext} from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Card(props) {\r\n\r\n    // define context\r\n    const currentUser = useContext(CurrentUserContext);\r\n    // check if card belongs to user\r\n    const isOwn = props.cardOwnerId === currentUser._id;\r\n\r\n    // Create a variable which you then set in `className` for the like button\r\n    const cardLikeButtonClassName = `element__like-button_active`;\r\n    // Check if the card was liked by the current user\r\n    const isLiked = props.cardLikes.some(i => {\r\n        const newI = i.replace(/^\\s+|\\s+$/gm, '')\r\n        return newI === currentUser._id\r\n    });\r\n\r\n    function handleCardClick() { \r\n        props.handleCardClick(props.cardLink, props.cardName);\r\n       \r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.cardLikes, props.cardId);\r\n        \r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        props.handleDeleteClick(props.cardId);\r\n    }\r\n\r\n    return(\r\n        \r\n        <li className=\"element\">\r\n            <button className={`element__delete ${isOwn ? \"element__delete_visible\": \"\"}`} onClick={handleDeleteClick}></button>\r\n            <div className=\"element__image\" onClick={handleCardClick} style={{ backgroundImage: `url(${props.cardLink})`}}>   \r\n            </div>\r\n            <div className=\"element__title-container\">\r\n                <h2 className=\"element__title\">{props.cardName}</h2>\r\n                <div className=\"element__like-container\">\r\n                    <button className={`element__like-button ${isLiked ? cardLikeButtonClassName : \"\"}`} onClick={handleLikeClick}></button>\r\n                    <p className=\"element__like-counter\">{props.cardLikes.length}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, {useContext} from 'react';\r\nimport editPencil from '../images/edit-pencil.svg';\r\nimport Card from './Card.js';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    const currentUser = useContext(CurrentUserContext)\r\n\r\n    return(\r\n        <main className=\"main\">\r\n            <section className=\"profile width\">\r\n                <div className=\"profile__avatar-container\">\r\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Your profile\"/>\r\n                    <div className=\"profile__overlay\">\r\n                        <img className=\"profile__overlay-image\" src={editPencil} alt=\"pencil\" onClick={props.handleEditAvatarClick}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"profile__name-container\">\r\n                    <h2 className=\"profile__name\">{currentUser.name}</h2>\r\n                    <button className=\"profile__edit-button\" onClick={props.handleEditProfileClick}></button>\r\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n                </div>\r\n                    \r\n                <button className=\"form__save-button profile__add-button\" onClick={props.handleAddCardClick}></button>\r\n            </section>\r\n            {/* Card Grid section */}\r\n            <section className=\"elements width\">\r\n                <ul className=\"elements__grid-container\">\r\n                    {\r\n                        props.cards.map((card) => {\r\n                            return <Card key={card.id} cardName={card.name} cardId={card.id} cardOwnerId={card.ownerId} cardLink={card.link} cardLikes={card.likes}\r\n                            onCardLike={props.handleCardLike} handleDeleteClick={props.handleDeleteClick} handleCardClick={props.handleCardClick} />\r\n                        })\r\n                    }\r\n\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\n\r\nfunction Footer(){\r\n    return(\r\n        <footer className=\"footer width\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Danny Demosi</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return(\r\n        \r\n        <section className={`image-modal ${props.isOpen ? \"image-modal_visible\" : \"\"}`}>\r\n                <div className=\"image-modal__container \">\r\n                    <button className=\"modal__exit image-modal__exit\" onClick={props.onClose}></button>\r\n                    <img className=\"image-modal__image\" src={props.link} alt={props.name}/>\r\n                     <p className=\"image-modal__subtitle\">{props.name}</p>  \r\n                </div>\r\n            </section>\r\n    )\r\n}\r\n\r\nexport default ImagePopup;","class Api {\r\n  constructor(endpoint) {\r\n    this._apiEndpoint = endpoint.url;\r\n    this._auth = endpoint.headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    return (res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\r\n  }\r\n\r\n  setHeader(auth) {\r\n    this._auth = {\r\n      \"Authorization\": `Bearer ${auth}`,\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n    return\r\n  }\r\n\r\n  getUserInfo() {\r\n      return fetch(`${this._apiEndpoint}/users/me`, {\r\n      headers: this._auth\r\n      })\r\n      .then ((res) => {\r\n        return this._checkResponse(res)})\r\n  }\r\n\r\n  getCardList() {\r\n    return fetch(`${this._apiEndpoint}/cards`, {\r\n      headers: this._auth\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  changeProfileInfo(data) {\r\n    return fetch(`${this._apiEndpoint}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._auth,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._apiEndpoint}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._auth,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  deleteCard(cardID) {\r\n    return fetch(`${this._apiEndpoint}/cards/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: this._auth\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  changeLikeCardStatus(cardID, likeStatus) {\r\n    if(likeStatus === true) {\r\n      return fetch(`${this._apiEndpoint}/cards/likes/${cardID}`, {\r\n        method: \"PUT\",\r\n        headers: this._auth\r\n      })\r\n      .then ( res => this._checkResponse(res))\r\n    } else {\r\n      return fetch(`${this._apiEndpoint}/cards/likes/${cardID}`, {\r\n        method: \"DELETE\",\r\n        headers: this._auth\r\n      })\r\n      .then ( res => this._checkResponse(res))\r\n    }\r\n  }\r\n\r\n  updateAvatar(url) {\r\n    return fetch(`${this._apiEndpoint}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._auth,\r\n      body: JSON.stringify({\r\n        avatar: url\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Api;\r\n","import { apiEndpointsRegister } from './utils';\r\n\r\nclass Auth {\r\n    constructor(endpoint) {\r\n        this._apiEndpoint = endpoint.url;\r\n        this._headers = endpoint.headers;\r\n    }\r\n\r\n    _checkResponse (res) {\r\n        return (res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\r\n    }\r\n\r\n    getUserInfo () {\r\n        return fetch(`${this._apiEndpoint}/users/me`, {\r\n            headers: this._headers,\r\n        })\r\n            .then((res) => {\r\n                return this._checkResponse(res)\r\n            })\r\n    }\r\n\r\n    signUp(email, password) {\r\n        return fetch(`${this._apiEndpoint}/signup`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({email, password})\r\n        })\r\n        .then((res) => {\r\n            return this._checkResponse(res);\r\n        })\r\n    }\r\n\r\n    signIn(email, password) {\r\n        return fetch(`${this._apiEndpoint}/signin`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({email, password})\r\n        })\r\n            .then((res) => {\r\n                return this._checkResponse(res);\r\n            })\r\n    }\r\n    \r\n    checkToken(jwt) {\r\n        return fetch(`${this._apiEndpoint}/users/me`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${jwt}`,\r\n            },\r\n        })\r\n            .then((res) => {\r\n                return this._checkResponse(res);\r\n            })\r\n    }\r\n    \r\n}\r\n\r\nconst authApi = new Auth(apiEndpointsRegister);\r\n\r\nexport { authApi };\r\n","// //Global Selectors\r\n// const modal = document.querySelector(\".modal\");\r\n\r\n// // Selectors for image pop up\r\n// const imageModal = document.querySelector('.image-modal');\r\n\r\n// //Selectors for Add modal\r\n// const nameInput = document.querySelector('.form__input_image-title');\r\n// const linkInput = document.querySelector('.form__input_image-link');\r\n// const addCard = document.querySelector('.form_card');\r\n// const addButton = document.querySelector('.profile__add-button');\r\n\r\n// //Selectors for edit modal\r\n// const editProfile = document.querySelector('.form_edit-profile');\r\n// const editButton = document.querySelector('.profile__edit-button');\r\n// const editNameInput = document.querySelector('.form__input_name');\r\n// const editAboutInput = document.querySelector('.form__input_about');\r\n\r\n// //Selectors for Avatar modal\r\n// const avatarUpdateForm = document.querySelector('.form_update-avatar');\r\n// const editAvatar = document.querySelector('.profile__avatar-container');\r\n// const avatarElement = document.querySelector('.profile__avatar');\r\n\r\n// //Selectors for delete modal\r\n// const removeCardID = document.querySelector('.form__card-id');\r\n// //api data\r\nconst apiEndpointsCards = {\r\n  url: \"https://api.danny-around-react.students.nomoreparties.site\",\r\n  // url: \"http://localhost:3000\",\r\n    headers: { \r\n     \"Content-Type\": \"application/json\"\r\n     }\r\n}\r\n\r\nconst apiEndpointsRegister = {\r\n  url:\"https://api.danny-around-react.students.nomoreparties.site\",\r\n  // url: 'http://localhost:3000',\r\n  headers:{\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n}\r\n\r\n//default validation config\r\n\r\n// const defaultConfig = {\r\n//     inputSelector: \".form__input\",\r\n//     submitButtonSelector: \".form__save-button\",\r\n//     inactiveButtonClass: \"form__save-button_disabled\",\r\n//     inputErrorClass: \"form__input-error\",\r\n//     errorClass: \"form__error_visible\"\r\n// };\r\n\r\n// function toggleModal() {\r\n//     modal.classList.toggle('modal_display_visible');\r\n// }\r\n\r\n// function loadingIcon(isLoading, modal) {\r\n//     if (isLoading) {\r\n//      modal.querySelector('.form__save-button').textContent = \"Saving...\";\r\n//     } else {\r\n//      modal.querySelector('.form__save-button').textContent = \"Saved!\";\r\n//     }\r\n//    }\r\n\r\nexport { apiEndpointsCards, apiEndpointsRegister};","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n\r\n\r\n    return(\r\n            <form name={props.name} onSubmit={props.onSubmit} className={`form form_${props.name} ${props.isOpen ? \"form_visible\" : \"\"}`}>\r\n                    <button className={`modal__exit form__exit form__exit_${props.name}`} onClick={props.onClose} type=\"reset\"></button>\r\n                    <p className=\"form__title form-width\">{props.title}</p>\r\n                    {props.children}\r\n                </form>\r\n        )\r\n}\r\n\r\nexport default PopupWithForm;","import React, {useContext} from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n    //context declaration\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    //ref declarations\r\n    const nameRef = React.createRef();\r\n    const aboutRef = React.createRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const name = nameRef.current.value;\r\n        const description = aboutRef.current.value;\r\n        //submit to server\r\n        props.onUpdateUser(name, description)\r\n    }\r\n\r\n    return(\r\n        <PopupWithForm onSubmit={handleSubmit} name={\"edit-profile\"} title={\"Edit Profile\"} isOpen={props.isOpen} onClose={props.onClose} >\r\n        <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={nameRef} id=\"profile-name\" className=\"form__text-field form__input form__input_name\" placeholder=\"Name\" type=\"text\" defaultValue={currentUser.name} minLength=\"2\" maxLength=\"40\" required />\r\n                <span id=\"profile-name-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={aboutRef} id=\"profile-about\" className=\"form__text-field form__input form__input_about\" placeholder=\"About me\" type=\"text\" defaultValue={currentUser.about} minLength=\"2\" maxLength=\"200\" required />\r\n                <span id=\"profile-about-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_profile form-width\">{props.isSaving ? 'Saving...' : 'Save'}</button>\r\n        </PopupWithForm>\r\n        )\r\n}\r\n\r\nexport default EditProfilePopup;","import React, { useContext } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n    //context declaration\r\n    const currentUser = useContext(CurrentUserContext);\r\n    //ref declarations\r\n    const linkRef = React.createRef();\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        const link = linkRef.current.value;\r\n        //submit to server\r\n        props.onUpdateAvatar(link)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <PopupWithForm name={\"update-avatar\"} title={\"Edit Avatar\"} onSubmit={onSubmit} isOpen={props.isOpen} onClose={props.onClose} >\r\n            <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={linkRef} id=\"avatar-link\" className=\"form__text-field form__input form__input_avatar-link\" placeholder=\"Image URL\" type=\"url\"\r\n                defaultValue={currentUser.avatar} minLength=\"1\" />\r\n                <span id=\"avatar-link-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_avatar-link form-width\">{props.isSaving ? 'Saving...' : 'Save'}</button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n    const titleRef = React.createRef();\r\n    const linkRef = React.createRef();\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        const name = titleRef.current.value;\r\n        const link = linkRef.current.value;\r\n        props.onAddPlace(name, link);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name={\"card\"} title={\"New Place\"} isOpen={props.isOpen} onClose={props.onClose} onSubmit={onSubmit}>\r\n            <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={titleRef} id=\"image-title\" className=\"form__text-field form__input form__input_image-title\" placeholder=\"Title\" type=\"text\" defaultValue=\"\" minLength=\"1\" maxLength=\"30\" />\r\n                <span id=\"image-title-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={linkRef} id=\"image-link\" className=\"form__text-field form__input form__input_image-link\" placeholder=\"Image URL\" type=\"url\"\r\n                    defaultValue=\"\" minLength=\"1\" />\r\n                <span id=\"image-link-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_card form-width\">{props.isSaving ? 'Saving...' : 'Create'}</button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmDeletePopup(props) {\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        //submit to server\r\n        props.onCardDelete(props.confirmDeleteId);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <PopupWithForm name={\"confirm\"} title={\"Are you sure?\"} onSubmit={onSubmit} isOpen={props.isOpen} onClose={props.onClose} >\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_avatar-link form-width\">{props.isSaving ? 'Saving...' : 'Yes'}</button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default ConfirmDeletePopup;","import React from 'react';\r\n\r\nconst Register = (props) => {\r\n\r\n    const emailRef = React.createRef();\r\n    const passwordRef = React.createRef();\r\n\r\n    function handleRegisterSubmit(e) {\r\n        e.preventDefault();\r\n        props.registerRequest(emailRef.current.value, passwordRef.current.value);\r\n    }\r\n\r\n    return ( \r\n        <form>\r\n            <input ref={emailRef} className=\"auth__input\" type=\"email\" placeholder=\"Email\" />\r\n            <input ref={passwordRef} className=\"auth__input\" type=\"password\" placeholder=\"Password\"/>\r\n            <button onClick={handleRegisterSubmit} type=\"submit\" className=\"auth__submit\">{props.name}</button>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Register;","import React from 'react';\r\n\r\nconst Login = (props) => {\r\n\r\n    const emailRef = React.createRef();\r\n    const passwordRef = React.createRef();\r\n\r\n    function handleLoginSubmit (e) {\r\n        e.preventDefault();\r\n        props.loginRequest(emailRef.current.value, passwordRef.current.value);\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <input ref={emailRef} className=\"auth__input\" type=\"email\" placeholder=\"Email\" />\r\n            <input ref={passwordRef} className=\"auth__input\" type=\"password\" placeholder=\"Password\" />\r\n            <button onClick={handleLoginSubmit} className=\"auth__submit\" type=\"submit\">{props.name}</button>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Login;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\n\r\n\r\nconst Auth = (props) => {\r\n\r\n  function loginOrRegister() {\r\n    if (props.name === 'Sign Up') {\r\n      return <Register \r\n        name={props.name} \r\n        registerRequest={props.registerRequest}  />\r\n    } else if (props.name === 'Log in'){\r\n      return <Login \r\n        name={props.name} \r\n        loginRequest={props.loginRequest}  />\r\n    } else {\r\n      console.log(\"Component doesn't exist\");\r\n      return null\r\n    }\r\n  }\r\n\r\n    return (\r\n      <div className=\"auth width\">\r\n        <h2 className=\"auth__title\">{props.name}</h2>\r\n        {loginOrRegister()}\r\n        <p className=\"auth__button-description\">{props.buttonDescription} <Link className=\"auth__link\" to={props.link}>{props.linkName} here!</Link></p>\r\n      </div>\r\n      );\r\n}\r\n \r\nexport default Auth;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n    return (\r\n        <Route>\r\n            {\r\n                () => props.isLoggedIn ? <Component {...props} /> : <Redirect to='/login' />\r\n            }\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React, { useState, useEffect } from 'react';\r\n\r\nconst InfoTooltip = (props) => {\r\n    const [message, setMessage] = useState('');\r\n    \r\n    useEffect(() => {\r\n        function isRegisterSuccess () {\r\n        if (props.registrationSuccess === true) {\r\n            setMessage('Success! You have now been registered.')\r\n\r\n            return true\r\n        } else if (props.registrationSuccess === false) {\r\n            setMessage('Oops, something went wrong! Please try again.')\r\n            return false\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n        isRegisterSuccess();\r\n    }, [props.registrationSuccess])\r\n    \r\n    return (\r\n        <section className={`form info-tooltip ${props.isOpen ? \"info-tooltip_visible\" : \"\"}`}>\r\n            <div className=\"form-width \">\r\n                <button className=\"modal__exit image-modal__exit\" onClick={props.onClose}></button>\r\n                <div className={`info-tooltip__image ${props.registrationSuccess ? 'info-tooltip__image_success' : 'info-tooltip__image_fail'}`}/>\r\n                <p className=\"info-tooltip__message\">{message}</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip;","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Header from './Header.js';\r\nimport Main from './Main.js';\r\nimport Footer from './Footer.js';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport Api from '../utils/Api.js';\r\nimport { authApi } from '../utils/Auth';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\r\nimport Auth from './Auth';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoTooltip';\r\n\r\nfunction App () {\r\n    const [currentUser, setCurrentInfo] = useState({})\r\n    // Popup states\r\n    const [editAvatarIsOpen, toggleEditAvatar] = useState(false);\r\n    const [editProfileIsOpen, toggleEditProfile] = useState(false);\r\n    const [addCardIsOpen, toggleAddCard] = useState(false);\r\n    const [confirmDeleteIsOpen, toggleConfirmDelete] = useState(false);\r\n    const [infoTooltipIsOpen, toggleInfoTooltip] = useState(false);\r\n\r\n    const [confirmDeleteId, setConfirmDeleteId] = useState(\"\")\r\n    const [selectedCard, setSelectedCard] = useState({\r\n        link: \"\",\r\n        name: \"\",\r\n        isOpen: false\r\n    });\r\n    const [isSaving, toggleSaveText] = useState(false);\r\n    const [cards, setCards] = useState([]);\r\n\r\n    //Project 14 new States\r\n    const [isLoggedIn, toggleLoggedIn] = useState(false);\r\n    const [registrationSuccess, setRegistrationSuccess] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [hamburger, toggleHamburgerState] = useState(false);\r\n\r\n    // Project 15 states\r\n    const [token, setToken] = useState(\"\");\r\n\r\n    // if token is in localStorage, set token state\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            setToken(localStorage.getItem('token'));\r\n        }\r\n    }, [token]);\r\n\r\n    // API initialization\r\n    const api = new Api({\r\n        url: \"https://api.danny-demosi.students.nomoreparties.site\",\r\n        // url: \"localhost:3000\",\r\n        headers: {\r\n            authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n\r\n    // API request to verify JWT\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            authApi.checkToken(localStorage.getItem('token'))\r\n                .then((res) => {\r\n                    if (res.status === 400) {\r\n                        localStorage.removeItem('token');\r\n                        localStorage.removeItem('email');\r\n                        return Promise.reject(new Error('No token or improper format'));\r\n                    } else if (res.status === 401) {\r\n                        localStorage.removeItem('token');\r\n                        localStorage.removeItem('email');\r\n                        return Promise.reject(new Error('Invalid token'));\r\n                    } else {\r\n                        toggleLoggedIn(true);\r\n                        setToken(localStorage.getItem('token'));\r\n                        setEmail(localStorage.getItem('email'));\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        } else {\r\n            return\r\n        }\r\n    }, [isLoggedIn]);\r\n\r\n    // Project 14 new functions\r\n    // API request for login\r\n\r\n    function loginRequest (email, password) {\r\n        authApi.signIn(email, password)\r\n            .then((res) => {\r\n                if (res.status === 400) {\r\n                    return Promise.reject(new Error('The username or password was not provided'))\r\n                } else if (res.status === 401) {\r\n                    return Promise.reject(new Error('Could not find a user with that email'))\r\n                } else {\r\n                    toggleLoggedIn(true);\r\n                    setToken(res.token);\r\n                    return res;\r\n                }\r\n            })\r\n            .then((data) => {\r\n                setEmail(email);\r\n                localStorage.setItem('email', email);\r\n                localStorage.setItem('token', data.token);\r\n                setToken(data.token);\r\n            })\r\n            .then()\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    // API request for register\r\n\r\n    function registerRequest (email, password) {\r\n        authApi.signUp(email, password)\r\n            .then((res) => {\r\n                if (res.status === 400) {\r\n                    return Promise.reject(new Error('The username or password is not in the proper format'))\r\n                } else {\r\n                    setRegistrationSuccess(true);\r\n                    toggleInfoTooltip(true);\r\n                    toggleLoggedIn(true);\r\n                    return res.data;\r\n                }\r\n            })\r\n            .then((data) => {\r\n                setEmail(data.email);\r\n                setCurrentInfo({\r\n                    name: data.name,\r\n                    about: data.about,\r\n                    avatar: data.avatar,\r\n                    _id: data._id\r\n                });\r\n                setToken(data.token);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setRegistrationSuccess(false);\r\n                toggleInfoTooltip(true);\r\n            })\r\n    }\r\n\r\n    //functions for Edit Profile\r\n\r\n    function handleEditProfileClick (e) {\r\n        toggleEditProfile(true);\r\n    }\r\n    function onUpdateUser (name, description) {\r\n        toggleSaveText(true);\r\n        api.changeProfileInfo({ name: name, about: description }).then(() => {\r\n            setCurrentUserInfo();\r\n        })\r\n            .then(() => {\r\n                toggleSaveText(false);\r\n                toggleEditProfile(false);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n\r\n    //functions for Edit Avatar\r\n    function handleEditAvatarClick (e) {\r\n        toggleEditAvatar(true);\r\n    }\r\n    function onUpdateAvatar (link) {\r\n        toggleSaveText(true)\r\n        api.updateAvatar(link).then(() => {\r\n            setCurrentUserInfo();\r\n        })\r\n            .then(() => {\r\n                toggleSaveText(false)\r\n                toggleEditAvatar(false);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n\r\n    //functions for Add place\r\n    function handleAddCardClick (e) {\r\n        toggleAddCard(true);\r\n    }\r\n    function onAddPlace (name, link) {\r\n        toggleSaveText(true);\r\n        api.addCard({ name: name, link: link }).then((card) => {\r\n            // console.log(card);\r\n            const newCard = {\r\n                name: card.name,\r\n                link: card.link,\r\n                likes: card.likes,\r\n                id: card._id,\r\n                ownerId: card.owner,\r\n            }\r\n            setCards([...cards, newCard]);\r\n        }).then(() => {\r\n            toggleSaveText(false);\r\n            toggleAddCard(false);\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    //functions for Cards\r\n    function onCardDelete (cardId) {\r\n        toggleSaveText(true);\r\n        //delete card from server\r\n        api.deleteCard(cardId).then(() => {\r\n            //filter cards on page and remove the card with matching id from the array\r\n            const filteredCards = cards.filter(card => card.id !== cardId)\r\n            //set new card array state\r\n            setCards(filteredCards);\r\n        })\r\n            .then(() => {\r\n                toggleSaveText(false);\r\n                toggleConfirmDelete(false);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n    function handleDeleteClick (cardId) {\r\n        setConfirmDeleteId(cardId);\r\n        toggleConfirmDelete(true);\r\n    }\r\n    function handleCardClick (link, name) {\r\n        setSelectedCard({ link: link, name: name, isOpen: true });\r\n    }\r\n    function handleCardLike (cardLikes, cardId) {\r\n        // Check one more time if this card was already liked\r\n        let isLiked = cardLikes.some(i => {\r\n            const newI = i.replace(/^\\s+|\\s+$/gm, '')\r\n            return newI === currentUser._id\r\n        });\r\n        // Send a request to the API and getting the updated card data\r\n        api.changeLikeCardStatus(cardId, !isLiked).then((card) => {\r\n            const newCard = {\r\n                name: card.name,\r\n                link: card.link,\r\n                likes: card.likes,\r\n                id: card._id,\r\n                ownerId: card.owner\r\n            }\r\n            // Create a new array based on the existing one and putting a new card into it\r\n            const newCards = cards.map((c) => {\r\n                const newC = c.id.replace(/^\\s+|\\s+$/gm, '')\r\n                return newC === cardId ? newCard : c\r\n            })\r\n            // Update the state\r\n            return newCards;\r\n        }).then((newCards) => {\r\n            setCards(newCards);\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    //function to assign context data\r\n\r\n    function setCurrentUserInfo () {\r\n        api.getUserInfo().then((res) => {\r\n            setCurrentInfo({\r\n                name: res.name,\r\n                about: res.about,\r\n                avatar: res.avatar,\r\n                _id: res._id\r\n            });\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    //global functions\r\n\r\n    function closeAllPopups (e) {\r\n        if (e.target === e.currentTarget) {\r\n            toggleEditAvatar(false);\r\n            toggleEditProfile(false);\r\n            toggleAddCard(false);\r\n            toggleConfirmDelete(false);\r\n            toggleInfoTooltip(false);\r\n            setSelectedCard({ link: \"\", name: \"\", isOpen: false })\r\n        }\r\n    }\r\n\r\n    function isOpen () {\r\n        if (selectedCard.isOpen || editAvatarIsOpen || editProfileIsOpen || addCardIsOpen || confirmDeleteIsOpen || infoTooltipIsOpen) {\r\n            return true;\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    //API request for User Info\r\n    useEffect(() => {\r\n        if (token) {\r\n            api.getUserInfo().then((res) => {\r\n                const currentInfo = {\r\n                    name: res.name,\r\n                    about: res.about,\r\n                    avatar: res.avatar,\r\n                    _id: res._id\r\n                }\r\n                setCurrentInfo(currentInfo);\r\n                return currentInfo\r\n            }).then((info) => {\r\n                api.getCardList().then((res) => {\r\n                    setCards(res.map((card) => {\r\n                        return {\r\n                            name: card.name,\r\n                            link: card.link,\r\n                            likes: card.likes,\r\n                            id: card._id,\r\n                            ownerId: card.owner,\r\n                            myId: info._id\r\n                        }\r\n                    }))\r\n                })\r\n                    .catch(err => console.log(err))\r\n            })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }, [email, token])\r\n\r\n    return (\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n            <div className=\"App\">\r\n                <div className=\"page\">\r\n\r\n                    <Router>\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <Header\r\n                                    email={email}\r\n                                    setEmail={setEmail}\r\n                                    hamburger={hamburger}\r\n                                    toggleHamburgerState={toggleHamburgerState}\r\n                                    toggleLoggedIn={toggleLoggedIn}\r\n                                />\r\n                                <ProtectedRoute\r\n                                    component={Main}\r\n                                    isLoggedIn={isLoggedIn}\r\n                                    selectedCard={selectedCard}\r\n                                    handleEditAvatarClick={handleEditAvatarClick}\r\n                                    handleEditProfileClick={handleEditProfileClick}\r\n                                    handleAddCardClick={handleAddCardClick}\r\n                                    handleCardClick={handleCardClick}\r\n                                    setCards={setCards}\r\n                                    cards={cards}\r\n                                    handleDeleteClick={handleDeleteClick}\r\n                                    handleCardLike={handleCardLike}\r\n                                />\r\n                            </Route>\r\n                            <Route exact path=\"/login\">\r\n                                <Header name=\"Sign Up\" link=\"/register\" />\r\n                                {isLoggedIn ? <Redirect to=\"/\" /> : <Auth\r\n                                    name=\"Log in\"\r\n                                    link=\"/register\"\r\n                                    linkName=\"Sign up\"\r\n                                    loginRequest={loginRequest}\r\n                                    buttonDescription=\"Not a member yet?\" />}\r\n                            </Route>\r\n                            <Route exact path=\"/register\">\r\n                                <Header name=\"Log in\" link=\"/login\" />\r\n                                {isLoggedIn ? <Redirect to=\"/\" /> : <Auth\r\n                                    name=\"Sign Up\"\r\n                                    link=\"/login\"\r\n                                    linkName=\"Log in\"\r\n                                    registerRequest={registerRequest}\r\n                                    buttonDescription=\"Already a member?\" />}\r\n                            </Route>\r\n                            <Redirect from=\"*\" to=\"/\" />\r\n                        </Switch>\r\n                    </Router>\r\n                    {/* Popup forms */}\r\n                    <section className={`modal ${isOpen() ? \"modal_display_visible\" : \"\"}`} onClick={closeAllPopups}>\r\n\r\n                        {/* Update Avatar form */}\r\n\r\n                        <EditAvatarPopup onUpdateAvatar={onUpdateAvatar} isOpen={editAvatarIsOpen} onClose={closeAllPopups} isSaving={isSaving} />\r\n\r\n                        {/* Edit profile form */}\r\n                        <EditProfilePopup onUpdateUser={onUpdateUser}\r\n                            isOpen={editProfileIsOpen} onClose={closeAllPopups} isSaving={isSaving} />\r\n\r\n                        {/* Add Card form */}\r\n                        <AddPlacePopup onUpdateUser={onUpdateUser}\r\n                            isOpen={addCardIsOpen} onClose={closeAllPopups} onAddPlace={onAddPlace} isSaving={isSaving} />\r\n\r\n                        {/* Confirm delete popup */}\r\n                        <ConfirmDeletePopup isOpen={confirmDeleteIsOpen} onClose={closeAllPopups} onCardDelete={onCardDelete} confirmDeleteId={confirmDeleteId} isSaving={isSaving} />\r\n                        {/* Image Popup form */}\r\n                        <ImagePopup isOpen={selectedCard.isOpen} onClose={closeAllPopups} name={selectedCard.name} link={selectedCard.link} />\r\n                        {/* Confirm registration popup */}\r\n                        <InfoTooltip isOpen={infoTooltipIsOpen} onClose={closeAllPopups} registrationSuccess={registrationSuccess} ></InfoTooltip>\r\n                    </section>\r\n\r\n\r\n\r\n                    <Footer />\r\n\r\n                </div>\r\n            </div>\r\n        </CurrentUserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}